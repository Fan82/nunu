{"ast":null,"code":"var _jsxFileName = \"/Users/fan/Documents/GitHub/nunu/src/component/MapScene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { motion, useAnimation, AnimatePresence } from \"framer-motion\";\nimport van1 from \"../assets/images/van1.webp\";\n// 由於您只需要一種車子圖片，因此 van2 保持不導入\n// import van2 from \"../assets/images/van2.webp\";\nimport marker1 from \"../assets/images/cake/mainImage.webp\";\nimport marker2 from \"../assets/images/cake/mainImage.webp\"; // 重新導入 marker2\n\n// 這些輔助函數和隨機路徑生成邏輯現在不被使用，因為我們使用固定路徑\n// 移除 getRandomInt 函數\n// 移除 generateSquaredPath 函數\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapScene() {\n  _s();\n  // 設定 SVG 的寬高和 viewBox 為你指定的值\n  const svgWidth = 1280;\n  const svgHeight = 425;\n\n  // 現在有兩個 path 的參照 (ref)\n  const pathA = useRef(null); // 路徑 A 的參照\n  const pathB = useRef(null); // 路徑 B 的參照\n  const controls = useAnimation();\n  const [currentLoc, setCurrentLoc] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isMoving, setIsMoving] = useState(false);\n  const [carPos, setCarPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [carImg, setCarImg] = useState(van1); // 預設只使用 van1\n\n  // Locations 陣列現在有兩個地點，每個對應一個路徑和標記點\n  const locations = [{\n    id: 1,\n    pathId: \"pathA\",\n    // 第一個地點對應 pathA\n    markerImg: marker1,\n    modal: {\n      name: \"nunu Shop - 位置 A\",\n      address: \"地點 A 地址：新加坡某處\",\n      hours: \"Mon - Sun | 10:00 - 18:00\"\n    },\n    carImg: van1 // 統一使用 van1\n  }, {\n    id: 2,\n    pathId: \"pathB\",\n    // 第二個地點對應 pathB\n    markerImg: marker2,\n    modal: {\n      name: \"nunu Van - 位置 B\",\n      address: \"地點 B 地址：新加坡其他處\",\n      hours: \"Weekend | 11:00 - 18:00\"\n    },\n    carImg: van1 // 統一使用 van1\n  }];\n\n  // 在組件載入時，將車子定位在隨機選擇的路徑起點\n  useEffect(() => {\n    // 確保路徑元素 (pathA 和 pathB) 都已載入\n    if (pathA.current && pathB.current) {\n      // 隨機選擇一個路徑作為車子的初始位置\n      const initialPathRef = Math.random() < 0.5 ? pathA : pathB;\n      const p = initialPathRef.current.getPointAtLength(0);\n      // 調整車子位置使其中心點對齊路徑起點 (車子是 w-16 h-16 = 64x64px，所以減去 32)\n      setCarPos({\n        x: p.x - 32,\n        y: p.y - 32\n      });\n    }\n  }, []); // 空陣列表示只在組件掛載時執行一次\n\n  // 將車子位置綁定到 Framer Motion 的 controls，以控制動畫\n  useEffect(() => {\n    controls.set({\n      x: carPos.x,\n      y: carPos.y\n    });\n  }, [carPos, controls]);\n\n  // 控制車子沿路徑行駛的動畫邏輯\n  const moveAlong = async pathRef => {\n    setIsMoving(true); // 設定移動狀態為 true\n    const pathEl = pathRef.current;\n    if (!pathEl) {\n      // 安全檢查，確保路徑元素存在\n      setIsMoving(false);\n      return;\n    }\n    const totalLength = pathEl.getTotalLength(); // 獲取路徑的總長度\n\n    await new Promise(resolve => {\n      let t = 0; // 進度變數 (0 到 1)\n      const duration = 2000; // 動畫持續時間 (毫秒)\n\n      const animate = timestamp => {\n        // 計算動畫進度，並初始化開始時間\n        const progress = Math.min((timestamp - (animate.startTime || timestamp)) / duration, 1);\n        if (!animate.startTime) animate.startTime = timestamp;\n\n        // 獲取當前進度下的路徑點座標\n        const point = pathEl.getPointAtLength(totalLength * progress);\n        // 更新車子位置 (置中)\n        setCarPos({\n          x: point.x - 32,\n          y: point.y - 32\n        });\n        if (progress < 1) {\n          requestAnimationFrame(animate); // 如果動畫未完成，繼續下一幀\n        } else {\n          resolve(); // 動畫完成，解決 Promise\n        }\n      };\n      requestAnimationFrame(animate); // 開始動畫循環\n    });\n\n    // 動畫完成後，延遲 1 秒顯示 Modal 並重置移動狀態\n    setTimeout(() => {\n      setShowModal(true);\n      setIsMoving(false);\n    }, 1000);\n  };\n\n  // 點擊標記點時觸發的函式\n  const onMarkerClick = loc => {\n    if (isMoving) return; // 如果車子正在移動，則不響應點擊\n    setShowModal(false); // 隱藏 Modal\n    setCurrentLoc(loc); // 設定當前選中的地點\n    setCarImg(loc.carImg); // 設定車子圖片 (這裡始終是 van1)\n\n    // 根據點擊的地點的 pathId 選擇對應的路徑參照 (ref)\n    const ref = loc.pathId === \"pathA\" ? pathA : pathB;\n    moveAlong(ref); // 觸發車子沿選定路徑行駛\n  };\n  return (\n    /*#__PURE__*/\n    // 最外層 div 容器的樣式，用於響應式顯示\n    _jsxDEV(\"div\", {\n      className: \"relative w-full bg-[#f1efea] overflow-hidden rounded-xl border\"\n      // 透過設定 height: 0 和 padding-top 來維持 SVG 的長寬比\n      // padding-top 的百分比是根據 svgHeight / svgWidth 的比例計算而來，確保不同螢幕尺寸下的顯示比例正確\n      ,\n      style: {\n        height: 0,\n        paddingTop: `${svgHeight / svgWidth * 100}%`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"absolute w-full h-full top-0 left-0\" // 確保 SVG 填滿父容器並定位在左上角\n        ,\n        viewBox: `0 0 ${svgWidth} ${svgHeight}` // 設定 SVG 的視圖框\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          ref: pathA,\n          d: \"M-2 78.9951C-2 78.9951 490.5 -76.9943 551 63C611.5 202.994 370.5 292.5 530.5 389.5C690.5 486.5 1277.5 324 1277.5 324\",\n          fill: \"none\" // 不填充顏色\n          ,\n          stroke: \"#3B3B3B\" // 路徑顏色\n          ,\n          strokeOpacity: \"0.63\" // 透明度\n          ,\n          strokeWidth: \"8\" // 線條寬度\n          ,\n          strokeLinecap: \"round\" // 線段末端形狀\n          ,\n          strokeLinejoin: \"round\" // 線段連接處形狀\n          ,\n          strokeDasharray: \"23 23\" // 虛線模式 (實線23，間隔23)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          ref: pathB,\n          d: \"M10 50 C200 10 400 300 700 380 C1000 400 1200 200 1270 100\",\n          fill: \"none\",\n          stroke: \"#3B3B3B\",\n          strokeOpacity: \"0.63\",\n          strokeWidth: \"8\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeDasharray: \"23 23\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(motion.img, {\n        src: carImg // 這裡只會是 van1\n        ,\n        alt: \"van\",\n        className: \"absolute w-16 h-16\" // 固定車子尺寸\n        ,\n        animate: controls // 綁定動畫控制\n        ,\n        transition: {\n          ease: \"linear\",\n          duration: 2\n        } // 動畫過渡效果\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this), locations.map(loc => {\n        var _ref$current, _ref$current2;\n        // 根據地點的 pathId 選擇對應的路徑參照\n        const ref = loc.pathId === \"pathA\" ? pathA : pathB;\n        // 獲取該路徑的總長度，如果 ref.current 還不存在則為 0\n        const totalLength = ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getTotalLength()) || 0;\n        // 獲取路徑終點的座標，如果 ref.current 還不存在則為 {x:0, y:0}\n        const p = ((_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : _ref$current2.getPointAtLength(totalLength)) || {\n          x: 0,\n          y: 0\n        };\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          // 唯一的 key\n          src: loc.markerImg // 標記點圖片 (marker1 或 marker2)\n          ,\n          alt: `marker-${loc.id}` // 圖片替代文字\n          ,\n          className: \"absolute w-8 h-8 cursor-pointer\" // 標記點尺寸和鼠標樣式\n          ,\n          style: {\n            left: p.x - 12,\n            top: p.y - 12\n          } // 標記點置中 (假設圖片是 24x24px，所以減去 12)\n          ,\n          onClick: () => onMarkerClick(loc) // 點擊事件\n        }, loc.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: showModal && currentLoc && /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"fixed inset-0 bg-black/50 flex items-center justify-center z-50\",\n          initial: {\n            opacity: 0\n          } // 初始透明度為 0\n          ,\n          animate: {\n            opacity: 1\n          } // 動畫到透明度 1\n          ,\n          exit: {\n            opacity: 0\n          } // 離場時動畫到透明度 0\n          ,\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"relative bg-white rounded-2xl p-6 shadow-2xl max-w-sm w-full border-4 border-orange-400\",\n            initial: {\n              scaleX: 0\n            } // 初始 X 軸縮放為 0\n            ,\n            animate: {\n              scaleX: 1\n            } // 動畫到 X 軸縮放 1\n            ,\n            exit: {\n              scaleX: 0\n            } // 離場時動畫到 X 軸縮放 0\n            ,\n            transition: {\n              duration: 0.4\n            } // 過渡時間 0.4 秒\n            ,\n            style: {\n              transformOrigin: \"center\"\n            } // 變形原點為中心\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"absolute top-3 right-3 text-2xl text-gray-500 hover:text-gray-800\",\n              onClick: () => setShowModal(false) // 點擊關閉 Modal\n              ,\n              children: \"\\xD7 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-orange-600 mb-2\",\n              children: currentLoc.modal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700 mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"\\u5730\\u5740\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), currentLoc.modal.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"\\u71DF\\u696D\\u6642\\u9593\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), currentLoc.modal.hours]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(MapScene, \"HQHewoH/ITYtAgWiR94Do+KLOSU=\", false, function () {\n  return [useAnimation];\n});\n_c = MapScene;\nvar _c;\n$RefreshReg$(_c, \"MapScene\");","map":{"version":3,"names":["React","useRef","useState","useEffect","motion","useAnimation","AnimatePresence","van1","marker1","marker2","jsxDEV","_jsxDEV","MapScene","_s","svgWidth","svgHeight","pathA","pathB","controls","currentLoc","setCurrentLoc","showModal","setShowModal","isMoving","setIsMoving","carPos","setCarPos","x","y","carImg","setCarImg","locations","id","pathId","markerImg","modal","name","address","hours","current","initialPathRef","Math","random","p","getPointAtLength","set","moveAlong","pathRef","pathEl","totalLength","getTotalLength","Promise","resolve","t","duration","animate","timestamp","progress","min","startTime","point","requestAnimationFrame","setTimeout","onMarkerClick","loc","ref","className","style","height","paddingTop","children","viewBox","d","fill","stroke","strokeOpacity","strokeWidth","strokeLinecap","strokeLinejoin","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","img","src","alt","transition","ease","map","_ref$current","_ref$current2","left","top","onClick","div","initial","opacity","exit","scaleX","transformOrigin","_c","$RefreshReg$"],"sources":["/Users/fan/Documents/GitHub/nunu/src/component/MapScene.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { motion, useAnimation, AnimatePresence } from \"framer-motion\";\nimport van1 from \"../assets/images/van1.webp\";\n// 由於您只需要一種車子圖片，因此 van2 保持不導入\n// import van2 from \"../assets/images/van2.webp\";\nimport marker1 from \"../assets/images/cake/mainImage.webp\";\nimport marker2 from \"../assets/images/cake/mainImage.webp\"; // 重新導入 marker2\n\n// 這些輔助函數和隨機路徑生成邏輯現在不被使用，因為我們使用固定路徑\n// 移除 getRandomInt 函數\n// 移除 generateSquaredPath 函數\n\nexport default function MapScene() {\n  // 設定 SVG 的寬高和 viewBox 為你指定的值\n  const svgWidth = 1280;\n  const svgHeight = 425;\n\n  // 現在有兩個 path 的參照 (ref)\n  const pathA = useRef(null); // 路徑 A 的參照\n  const pathB = useRef(null); // 路徑 B 的參照\n  const controls = useAnimation();\n\n  const [currentLoc, setCurrentLoc] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isMoving, setIsMoving] = useState(false);\n  const [carPos, setCarPos] = useState({ x: 0, y: 0 });\n  const [carImg, setCarImg] = useState(van1); // 預設只使用 van1\n\n  // Locations 陣列現在有兩個地點，每個對應一個路徑和標記點\n  const locations = [\n    {\n      id: 1,\n      pathId: \"pathA\", // 第一個地點對應 pathA\n      markerImg: marker1,\n      modal: {\n        name: \"nunu Shop - 位置 A\",\n        address: \"地點 A 地址：新加坡某處\",\n        hours: \"Mon - Sun | 10:00 - 18:00\",\n      },\n      carImg: van1, // 統一使用 van1\n    },\n    {\n      id: 2,\n      pathId: \"pathB\", // 第二個地點對應 pathB\n      markerImg: marker2,\n      modal: {\n        name: \"nunu Van - 位置 B\",\n        address: \"地點 B 地址：新加坡其他處\",\n        hours: \"Weekend | 11:00 - 18:00\",\n      },\n      carImg: van1, // 統一使用 van1\n    },\n  ];\n\n  // 在組件載入時，將車子定位在隨機選擇的路徑起點\n  useEffect(() => {\n    // 確保路徑元素 (pathA 和 pathB) 都已載入\n    if (pathA.current && pathB.current) {\n      // 隨機選擇一個路徑作為車子的初始位置\n      const initialPathRef = Math.random() < 0.5 ? pathA : pathB;\n      const p = initialPathRef.current.getPointAtLength(0);\n      // 調整車子位置使其中心點對齊路徑起點 (車子是 w-16 h-16 = 64x64px，所以減去 32)\n      setCarPos({ x: p.x - 32, y: p.y - 32 });\n    }\n  }, []); // 空陣列表示只在組件掛載時執行一次\n\n  // 將車子位置綁定到 Framer Motion 的 controls，以控制動畫\n  useEffect(() => {\n    controls.set({ x: carPos.x, y: carPos.y });\n  }, [carPos, controls]);\n\n  // 控制車子沿路徑行駛的動畫邏輯\n  const moveAlong = async (pathRef) => {\n    setIsMoving(true); // 設定移動狀態為 true\n    const pathEl = pathRef.current;\n    if (!pathEl) {\n      // 安全檢查，確保路徑元素存在\n      setIsMoving(false);\n      return;\n    }\n    const totalLength = pathEl.getTotalLength(); // 獲取路徑的總長度\n\n    await new Promise((resolve) => {\n      let t = 0; // 進度變數 (0 到 1)\n      const duration = 2000; // 動畫持續時間 (毫秒)\n\n      const animate = (timestamp) => {\n        // 計算動畫進度，並初始化開始時間\n        const progress = Math.min(\n          (timestamp - (animate.startTime || timestamp)) / duration,\n          1\n        );\n        if (!animate.startTime) animate.startTime = timestamp;\n\n        // 獲取當前進度下的路徑點座標\n        const point = pathEl.getPointAtLength(totalLength * progress);\n        // 更新車子位置 (置中)\n        setCarPos({ x: point.x - 32, y: point.y - 32 });\n\n        if (progress < 1) {\n          requestAnimationFrame(animate); // 如果動畫未完成，繼續下一幀\n        } else {\n          resolve(); // 動畫完成，解決 Promise\n        }\n      };\n      requestAnimationFrame(animate); // 開始動畫循環\n    });\n\n    // 動畫完成後，延遲 1 秒顯示 Modal 並重置移動狀態\n    setTimeout(() => {\n      setShowModal(true);\n      setIsMoving(false);\n    }, 1000);\n  };\n\n  // 點擊標記點時觸發的函式\n  const onMarkerClick = (loc) => {\n    if (isMoving) return; // 如果車子正在移動，則不響應點擊\n    setShowModal(false); // 隱藏 Modal\n    setCurrentLoc(loc); // 設定當前選中的地點\n    setCarImg(loc.carImg); // 設定車子圖片 (這裡始終是 van1)\n\n    // 根據點擊的地點的 pathId 選擇對應的路徑參照 (ref)\n    const ref = loc.pathId === \"pathA\" ? pathA : pathB;\n    moveAlong(ref); // 觸發車子沿選定路徑行駛\n  };\n\n  return (\n    // 最外層 div 容器的樣式，用於響應式顯示\n    <div\n      className=\"relative w-full bg-[#f1efea] overflow-hidden rounded-xl border\"\n      // 透過設定 height: 0 和 padding-top 來維持 SVG 的長寬比\n      // padding-top 的百分比是根據 svgHeight / svgWidth 的比例計算而來，確保不同螢幕尺寸下的顯示比例正確\n      style={{ height: 0, paddingTop: `${(svgHeight / svgWidth) * 100}%` }}\n    >\n      <svg\n        className=\"absolute w-full h-full top-0 left-0\" // 確保 SVG 填滿父容器並定位在左上角\n        viewBox={`0 0 ${svgWidth} ${svgHeight}`} // 設定 SVG 的視圖框\n      >\n        {/* 路徑 A：使用您提供的固定 d 屬性 */}\n        <path\n          ref={pathA}\n          d=\"M-2 78.9951C-2 78.9951 490.5 -76.9943 551 63C611.5 202.994 370.5 292.5 530.5 389.5C690.5 486.5 1277.5 324 1277.5 324\"\n          fill=\"none\" // 不填充顏色\n          stroke=\"#3B3B3B\" // 路徑顏色\n          strokeOpacity=\"0.63\" // 透明度\n          strokeWidth=\"8\" // 線條寬度\n          strokeLinecap=\"round\" // 線段末端形狀\n          strokeLinejoin=\"round\" // 線段連接處形狀\n          strokeDasharray=\"23 23\" // 虛線模式 (實線23，間隔23)\n        />\n        {/* 路徑 B：一條新的、不同的貝茲曲線，以避免路徑重疊或終點重疊 */}\n        <path\n          ref={pathB}\n          d=\"M10 50 C200 10 400 300 700 380 C1000 400 1200 200 1270 100\"\n          fill=\"none\"\n          stroke=\"#3B3B3B\"\n          strokeOpacity=\"0.63\"\n          strokeWidth=\"8\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeDasharray=\"23 23\"\n        />\n      </svg>\n\n      {/* 小車圖片的 Framer Motion 動畫容器 */}\n      <motion.img\n        src={carImg} // 這裡只會是 van1\n        alt=\"van\"\n        className=\"absolute w-16 h-16\" // 固定車子尺寸\n        animate={controls} // 綁定動畫控制\n        transition={{ ease: \"linear\", duration: 2 }} // 動畫過渡效果\n      />\n\n      {/* 遍歷 locations 陣列，渲染每個標記點 */}\n      {locations.map((loc) => {\n        // 根據地點的 pathId 選擇對應的路徑參照\n        const ref = loc.pathId === \"pathA\" ? pathA : pathB;\n        // 獲取該路徑的總長度，如果 ref.current 還不存在則為 0\n        const totalLength = ref.current?.getTotalLength() || 0;\n        // 獲取路徑終點的座標，如果 ref.current 還不存在則為 {x:0, y:0}\n        const p = ref.current?.getPointAtLength(totalLength) || { x: 0, y: 0 };\n        return (\n          <img\n            key={loc.id} // 唯一的 key\n            src={loc.markerImg} // 標記點圖片 (marker1 或 marker2)\n            alt={`marker-${loc.id}`} // 圖片替代文字\n            className=\"absolute w-8 h-8 cursor-pointer\" // 標記點尺寸和鼠標樣式\n            style={{ left: p.x - 12, top: p.y - 12 }} // 標記點置中 (假設圖片是 24x24px，所以減去 12)\n            onClick={() => onMarkerClick(loc)} // 點擊事件\n          />\n        );\n      })}\n\n      {/* Modal 顯示邏輯 (使用 AnimatePresence 處理進場/離場動畫) */}\n      <AnimatePresence>\n        {showModal && currentLoc && (\n          <motion.div\n            className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\"\n            initial={{ opacity: 0 }} // 初始透明度為 0\n            animate={{ opacity: 1 }} // 動畫到透明度 1\n            exit={{ opacity: 0 }} // 離場時動畫到透明度 0\n          >\n            <motion.div\n              className=\"relative bg-white rounded-2xl p-6 shadow-2xl max-w-sm w-full border-4 border-orange-400\"\n              initial={{ scaleX: 0 }} // 初始 X 軸縮放為 0\n              animate={{ scaleX: 1 }} // 動畫到 X 軸縮放 1\n              exit={{ scaleX: 0 }} // 離場時動畫到 X 軸縮放 0\n              transition={{ duration: 0.4 }} // 過渡時間 0.4 秒\n              style={{ transformOrigin: \"center\" }} // 變形原點為中心\n            >\n              <button\n                className=\"absolute top-3 right-3 text-2xl text-gray-500 hover:text-gray-800\"\n                onClick={() => setShowModal(false)} // 點擊關閉 Modal\n              >\n                &times; {/* 關閉按鈕的叉號 */}\n              </button>\n              <h2 className=\"text-2xl font-bold text-orange-600 mb-2\">\n                {currentLoc.modal.name}\n              </h2>\n              <p className=\"text-gray-700 mb-1\">\n                <span className=\"font-semibold\">地址：</span>\n                {currentLoc.modal.address}\n              </p>\n              <p className=\"text-gray-700\">\n                <span className=\"font-semibold\">營業時間：</span>\n                {currentLoc.modal.hours}\n              </p>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}